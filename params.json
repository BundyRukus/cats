{"name":"CATS","tagline":"Code Assistant for TypeScript","body":"## CATS\r\n\r\nCATS is an IDE for TypeScript and Web developers. CATS is open source software released under the Apache 2.0 license and it runs on Linux, Windows and OS X. \r\nCATS itself is also written in TypeScript, so you can easily customize it if required.\r\n\r\nAnd although still work in progress, CATS is already very usable and has built-in support for the following features:\r\n\r\n- Intelligent code editor and code completion for TypeScript sources.\r\n \r\n<img width=\"680\" src=\"https://raw.github.com/jbaron/cats/master/artifacts/cats_screenshot.png\" />\r\n\r\n- Syntax highlighting for over 110 languages (TextMate/Sublime Text.tmlanguage files can be imported).\r\n- Support for code snippets.\r\n- Support for refactoring and smart navigation.\r\n- TypeScript compilation to JavaScript.\r\n- Validation of the source code while you are typing.\r\n- Linter support for TypeScript and JavaScript.\r\n- Generate API documentation based on the comments in the source code.\r\n- Editing features like folding, indentation and code formatting.\r\n- Running your application from within IDE and using the WebKit debugger to debug.\r\n- Support for external build systems like Grunt, Jake, Gulp and Makefiles.\r\n\r\n\r\n## Usage\r\n\r\nThe easiest way to start using CATS it to follow these simple steps:\r\n\r\n* In case you haven't already installed nodewebkit on your machine, do that first. In case you have nodejs installed, you can install\r\n  nodewebkit by typing the following command (using npm, the node package manager):\r\n\r\n        npm install -g nodewebkit\r\n\r\n  Alternatively you can download Nodewebkit from the following page: [Nodewebkit downloads](https://github.com/rogerwang/node-webkit). \r\n\r\n* Download the CATS package (it is a file called cats.nw). There are two versions available, a stable version meant for daily work \r\n  and an unstable version if you want to try out the latest and greatest features. Download either one:\r\n\r\n  [CATS latest stable version](https://github.com/jbaron/cats/releases/download/latest_stable/cats.nw) \r\n  \r\n  [CATS latest unstable version](https://github.com/jbaron/cats/releases/download/latest_unstable/cats.nw) \r\n  \r\n  \r\nAfter you installed Nodewebkit, just go to the directory where you downloaded cats.nw and type:\r\n\r\n```shell\r\nnodewebkit cats.nw\r\n```\r\n\r\nIf you already have a directory with TypeScript files, just select that directory from \"Open project...\" \r\nto start editing your files.\r\n\r\nThere are some commandline paramters you can use. For example to open CATS with a specific project, use:\r\n\r\n```shell        \r\nnodewebkit cats.nw --project </path/projectDirectory>\r\n```\r\n\r\nPlease note that you have to specify the full path to the project directory you want to open. \r\n\r\nTo open CATS with the same project as last time you opened it, you can use the --restore option:\r\n\r\n```shell\r\nnodewebkit cats.nw --restore\r\n```\r\n\r\n## Building\r\n\r\nIn case you want to make changes to CATS and want to do build new versions, there are a few \r\nadditional steps to do.\r\n\r\nEnsure that you have [Git](http://git-scm.com/downloads) and [Node.js](http://nodejs.org/) installed.\r\n\r\nClone a copy of the CATS repo:\r\n\r\n```\r\ngit clone https://github.com/jbaron/cats.git\r\n```\r\n\r\nChange to the cats directory:\r\n\r\n```\r\ncd cats\r\n```\r\n\r\nInstall Nodewebkit, TypeScript, Jake and the module dependencies:\r\n\r\n```\r\nnpm install -g nodewebkit\r\nnpm install -g typescript\r\nnpm install -g jake\r\nnpm install\r\n```\r\n\r\nUse one of the following to build:\r\n\r\n```\r\njake lib/main.js            # Builds the main frontend module for CATS\r\njake lib/tsworker.js        # Builds the Web workers module\r\njake clean                  # Cleans the compiler output, declare files, and tests\r\njake default                # Builds the full CATS application\r\njake -T                     # List the above commands. \r\n```\r\n\r\n\r\n## Configuration\r\n\r\nCATS will look for a file in the project directory called: \".settings/config.json\". If found, CATS will use the values configured in this file, otherwise it will use some sensible default values.\r\nYou can edit this file (or the default values if you don't have this file yet) from the main menu.\r\n\r\n\r\n## Goals\r\n\r\nOne of the main goals of CATS is to make the developer that is used to IDE's like Eclipse, NetBeans, Visual Studio or IntelliJ, feel right at home. \r\nSo the same support you got from your IDE when you developed in Java or C#, is now available for TypeScript projects.\r\n\r\nHowever a lot of effort is spent to assure CATS deosn't become a resource hog. So while designing and developing CATS, performance is one of the key aspects.\r\nIn fact, CATS runs fine on older hardware.\r\n\r\n\r\n## Bugs and Issues\r\n\r\nIn case you encounter an issue, you can open a ticket on Github. \r\nAlso enhancement requests can be entered here: [Github issue tracker](https://github.com/jbaron/cats/issues)\r\n\r\n\r\n## Couldn't have done it without ....\r\n\r\nThere is not a lot of documentation yet explaining the structure of CATS and how the different parts work together. \r\nSo the more surprised we were when we received some pull request that added functionality or fixed some bugs. So thanks to everyone who\r\nalready contributed to this project.\r\n\r\nAnd of course some of the main 3rd party components that we have used within CATS and couldn't have done without:\r\n\r\n- [TypeScript](http://www.typescriptlang.org) (of course), developed by Microsoft.\r\n\r\n- [Qooxdoo](http://www.qooxdoo.org), an excellent JavaScript library with many great UI widgets.  \r\n\r\n- [ACE](http://ace.ajax.org), an embeddable code editor written in JavaScript. The main developers are Cloud9 and Mozilla.\r\n\r\n- [Node-webkit](https://github.com/rogerwang/node-webkit). This is a great initiative from Intel to allow Node libraries to be used within a web page. \r\n  CATS use this to read and write local files without the need for a server-side component.\r\n\r\n- [TSLint](https://github.com/palantir/tslint). A linter for the TypeScript language that helps to improve your code base even further.\r\n\r\n- [TypeDoc](https://github.com/sebastian-lenz/typedoc). This is a documentation generator for TypeScript projects that supports\r\n  theming and a lot of other very impressive features. \r\n\r\n- [jsUML2](http://www.jrromero.net/tools/jsUML2). This is library for creating UML diagrams done in pure JavaScript.\r\n\r\n## Todo\r\n\r\nThe todo list items are tracked as enhancement requests on GitHub. You can check them out at:\r\n\r\n[Todo List](https://github.com/jbaron/cats/issues?labels=enhancement&page=1&state=open)\r\n\r\nThere is also a milestone planning in there when some enhancements should be delivered. \r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}